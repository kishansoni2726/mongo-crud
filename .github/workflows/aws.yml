name: Deploy to Amazon ECS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-1                       # Your preferred AWS region
  ECR_REPOSITORY: crud                # Your Amazon ECR repository name
  ECS_SERVICE: crud              # Your Amazon ECS service name
  ECS_CLUSTER: crud           # Your Amazon ECS cluster name
  ECS_TASK_DEFINITION: task-definition.json # Path to your ECS task definition file
  CONTAINER_NAME: crud                         # Name of the container in your task definition

permissions:
  contents: read             # Allows read access to the repository contents
  id-token: write            # Allows writing an ID token for authentication
  packages: write            # Allows writing to the GitHub Packages
  checks: read              # Allows read access to GitHub Secrets

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install MongoDB tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg wget
          wget -qO- https://www.mongodb.org/static/pgp/server-8.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-8.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version
      
      - name: Mongodb Cert Setup
        run: |
          wget https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
      
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }} .
        
      - name: Tag Docker image
        run: |
          docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
      
      
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

      - name: Deploy to Amazon ECS
        run: |
          NEW_TASK_DEFINITION=$(aws ecs register-task-definition --cli-input-json file://.github/workflows/task-definition.json)
          TASK_DEFINITION_ARN=$(echo $NEW_TASK_DEFINITION | jq -r '.taskDefinition.taskDefinitionArn')
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment --task-definition $TASK_DEFINITION_ARN
